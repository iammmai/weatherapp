{"ast":null,"code":"var _jsxFileName = \"/Users/maiduong/Downloads/app/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport * as data from \"./data.json\";\nimport * as dataWeek from \"./data7d.json\";\nimport { format, isSameDay, fromUnixTime, isWeekend } from \"date-fns\";\nconst advice = {\n  \"10d\": \"Better take an umbrella with you!\",\n  Drizzle: \"Don't worry, it's just a few drops.\",\n  Clear: \"Clear sky, clear mind.\",\n  \"03d\": \"A gray day provides the best light.\"\n};\n\nconst parseCurrentWeather = raw => {\n  return {\n    date: raw.current.dt,\n    temperature: raw.current.temp,\n    description: raw.current.weather[0].description,\n    iconURL: `http://openweathermap.org/img/wn/${raw.current.weather[0].icon}@4x.png`\n  };\n};\n\nconst parseWeekendWeather = raw => {\n  const weekend = raw.daily.filter(day => isWeekend(fromUnixTime(day.dt)));\n};\n\nfunction WeatherDisplay({\n  date,\n  description,\n  temperature,\n  iconURL\n}) {\n  const day = isSameDay(new Date(), date) ? \"Today\" : format(date, \"EEEE\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 9\n    }\n  }, day), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 9\n    }\n  }, format(date, \"PP\"))), /*#__PURE__*/React.createElement(\"img\", {\n    src: iconURL,\n    alt: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }\n  }, description), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"temperature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }, temperature), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, advice[description]));\n}\n\nfunction App() {\n  const [showWeekend, setShowWeekend] = React.useState(true);\n  const todayData = parseCurrentWeather(dataWeek.default);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(WeatherDisplay, Object.assign({}, todayData, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 11\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/maiduong/Downloads/app/src/App.js"],"names":["React","data","dataWeek","format","isSameDay","fromUnixTime","isWeekend","advice","Drizzle","Clear","parseCurrentWeather","raw","date","current","dt","temperature","temp","description","weather","iconURL","icon","parseWeekendWeather","weekend","daily","filter","day","WeatherDisplay","Date","App","showWeekend","setShowWeekend","useState","todayData","default"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport * as data from \"./data.json\";\nimport * as dataWeek from \"./data7d.json\";\nimport { format, isSameDay, fromUnixTime, isWeekend } from \"date-fns\";\n\nconst advice = {\n  \"10d\": \"Better take an umbrella with you!\",\n  Drizzle: \"Don't worry, it's just a few drops.\",\n  Clear: \"Clear sky, clear mind.\",\n  \"03d\": \"A gray day provides the best light.\",\n};\n\nconst parseCurrentWeather = (raw) => {\n  return {\n    date: raw.current.dt,\n    temperature: raw.current.temp,\n    description: raw.current.weather[0].description,\n    iconURL: `http://openweathermap.org/img/wn/${raw.current.weather[0].icon}@4x.png`,\n  };\n};\n\nconst parseWeekendWeather = (raw) => {\n  const weekend = raw.daily.filter((day) => isWeekend(fromUnixTime(day.dt)));\n};\n\nfunction WeatherDisplay({ date, description, temperature, iconURL }) {\n  const day = isSameDay(new Date(), date) ? \"Today\" : format(date, \"EEEE\");\n  return (\n    <div>\n      <div className=\"Date\">\n        <h2>{day}</h2>\n        <p>{format(date, \"PP\")}</p>\n      </div>\n      <img src={iconURL} alt=\"icon\" />\n      <p>{description}</p>\n      <p id=\"temperature\">{temperature}</p>\n      <p>{advice[description]}</p>\n    </div>\n  );\n}\n\nfunction App() {\n  const [showWeekend, setShowWeekend] = React.useState(true);\n  const todayData = parseCurrentWeather(dataWeek.default);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"Card\">\n          <WeatherDisplay {...todayData} />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}