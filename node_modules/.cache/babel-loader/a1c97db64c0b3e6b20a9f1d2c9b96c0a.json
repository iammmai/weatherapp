{"ast":null,"code":"var _jsxFileName = \"/Users/maiduong/Downloads/app/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport * as data from \"./data.json\";\nimport * as dataWeek from \"./data7d.json\";\nimport { format, isSameDay, fromUnixTime, isWeekend } from \"date-fns\";\nconst advice = {\n  \"10d\": \"Better take an umbrella with you!\",\n  \"01d\": \"Clear sky, clear mind.\",\n  \"03d\": \"A gray day provides the best light.\"\n};\n\nconst parseDay = day => {\n  return {\n    date: fromUnixTime(day.dt),\n    temperature: day.temp,\n    description: day.weather[0].description,\n    icon: day.weather[0].icon\n  };\n};\n\nconst parseWeekendWeather = raw => {\n  const weekend = raw.daily.filter(day => isWeekend(day.dt));\n  const parsed = raw.daily.map(day => parseDay(day));\n  return parsed;\n};\n\nfunction WeatherDisplay({\n  date,\n  description,\n  temperature,\n  icon\n}) {\n  const day = isSameDay(new Date(), date) ? \"Today\" : format(date, \"EEEE\");\n  const iconURL = `http://openweathermap.org/img/wn/${icon}@4x.png`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, day), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, format(date, \"PP\"))), /*#__PURE__*/React.createElement(\"img\", {\n    src: iconURL,\n    alt: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }\n  }, description), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"temperature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }\n  }, temperature), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }\n  }, advice[icon]));\n}\n\nfunction App() {\n  const [showWeekend, setShowWeekend] = React.useState(true);\n  const todayData = parseDay(dataWeek.default.current);\n  const weekendData = parseWeekendWeather(dataWeek.default);\n  console.log(weekendData);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(WeatherDisplay, Object.assign({}, weekendData[0], {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }\n  })))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/maiduong/Downloads/app/src/App.js"],"names":["React","data","dataWeek","format","isSameDay","fromUnixTime","isWeekend","advice","parseDay","day","date","dt","temperature","temp","description","weather","icon","parseWeekendWeather","raw","weekend","daily","filter","parsed","map","WeatherDisplay","Date","iconURL","App","showWeekend","setShowWeekend","useState","todayData","default","current","weekendData","console","log"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport * as data from \"./data.json\";\nimport * as dataWeek from \"./data7d.json\";\nimport { format, isSameDay, fromUnixTime, isWeekend } from \"date-fns\";\n\nconst advice = {\n  \"10d\": \"Better take an umbrella with you!\",\n  \"01d\": \"Clear sky, clear mind.\",\n  \"03d\": \"A gray day provides the best light.\",\n};\n\nconst parseDay = (day) => {\n  return {\n    date: fromUnixTime(day.dt),\n    temperature: day.temp,\n    description: day.weather[0].description,\n    icon: day.weather[0].icon,\n  };\n};\n\nconst parseWeekendWeather = (raw) => {\n  const weekend = raw.daily.filter((day) => isWeekend(day.dt));\n  const parsed = raw.daily.map((day) => parseDay(day));\n  return parsed;\n};\n\nfunction WeatherDisplay({ date, description, temperature, icon }) {\n  const day = isSameDay(new Date(), date) ? \"Today\" : format(date, \"EEEE\");\n  const iconURL = `http://openweathermap.org/img/wn/${icon}@4x.png`;\n  return (\n    <div>\n      <div className=\"Date\">\n        <h3>{day}</h3>\n        <p>{format(date, \"PP\")}</p>\n      </div>\n      <img src={iconURL} alt=\"icon\" />\n      <p>{description}</p>\n      <p id=\"temperature\">{temperature}</p>\n      <p>{advice[icon]}</p>\n    </div>\n  );\n}\n\nfunction App() {\n  const [showWeekend, setShowWeekend] = React.useState(true);\n  const todayData = parseDay(dataWeek.default.current);\n  const weekendData = parseWeekendWeather(dataWeek.default);\n  console.log(weekendData);\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <div className=\"Card\">\n          <WeatherDisplay {...weekendData[0]} />\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}