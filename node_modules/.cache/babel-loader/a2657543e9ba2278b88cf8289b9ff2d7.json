{"ast":null,"code":"var _jsxFileName = \"/Users/maiduong/Downloads/app/src/App.js\";\nimport React from \"react\";\nimport \"./App.css\";\nimport { format, isSameDay, fromUnixTime, isWeekend, isThisWeek, differenceInCalendarDays } from \"date-fns\";\n\nfunction WeatherInfo({\n  displayChoice\n}) {\n  const [weatherData, setWeatherData] = React.useState(null);\n  React.useEffect(() => {\n    fetch(\"https://api.openweathermap.org/data/2.5/onecall?lat=52.5200&lon=13.4050&exclude=hourly,minutely&&units=metric&appid=43bbfae6b2cee11fcefb3bc03472ef9a\").then(response => response.json()).then(data => setWeatherData(data));\n  }, []);\n\n  if (!weatherData) {\n    //  TODO: add a loading spinner??\n    return \"...\";\n  }\n\n  const data = displayChoice === \"today\" ? parseDay(weatherData.current) : parseWeekend(weatherData);\n  console.log(JSON.stringify(data, null, 2));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Card\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 5\n    }\n  }, data.map(day => /*#__PURE__*/React.createElement(WeatherDisplay, Object.assign({}, day, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }))));\n}\n\nconst advice = {\n  \"01d\": \"Clear sky, clear mind.\",\n  \"01n\": \"Enjoy the stars tonight.\",\n  \"10d\": \"Better take an umbrella with you!\",\n  \"09d\": \"Heavy showers ahead!\",\n  \"02d\": \"A gray day provides the best light.\",\n  \"03d\": \"A nice day to spend outside\",\n  \"04d\": \"Don't look so gloomy, it's just the weather\",\n  \"11d\": \"Better stay inside!\",\n  \"09d\": \"Just a few drops\",\n  \"13d\": \"Make sure to put on some gloves today\",\n  \"50d\": \"Be careful when you drive!\"\n};\n\nconst parseDay = day => {\n  return [{\n    date: fromUnixTime(day.dt),\n    temperature: arrAvg(Object.values(day.temp)) || day.temp,\n    description: day.weather[0].description,\n    iconId: day.weather[0].icon\n  }];\n};\n\nconst arrAvg = arr => arr.reduce((a, b) => a + b, 0) / arr.length;\n\nconst isNextWeekend = date => {\n  const diff = differenceInCalendarDays(date, new Date());\n  return diff >= 7 && diff <= 9 && isWeekend(date);\n};\n\nconst parseWeekend = raw => {\n  const parsed = raw.daily.flatMap(day => parseDay(day));\n\n  if (isWeekend(new Date())) {\n    return parsed.filter(day => isNextWeekend(day));\n  }\n\n  return parsed.filter(day => isWeekend(day.date) && isThisWeek(day.date, {\n    weekStartsOn: 1\n  }));\n};\n\nfunction WeatherDisplay({\n  date,\n  description,\n  temperature,\n  iconId\n}) {\n  const day = isSameDay(new Date(), date) ? \"Today\" : format(date, \"EEEE\");\n  const iconURL = `http://openweathermap.org/img/wn/${iconId}@4x.png`;\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"WeatherDisplay\",\n    key: day,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"Date\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h3\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }\n  }, day), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }\n  }, format(date, \"PP\"))), /*#__PURE__*/React.createElement(\"img\", {\n    src: iconURL,\n    alt: \"icon\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }\n  }, description), /*#__PURE__*/React.createElement(\"p\", {\n    id: \"temperature\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }\n  }, Math.round(temperature), \" \\xBAC\"), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }\n  }, advice[iconId] ? advice[iconId] : \"Just another day\"));\n}\n\nfunction App() {\n  const [displayChoice, setDisplayChoice] = React.useState(\"today\");\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"App\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"header\", {\n    className: \"App-header\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(WeatherInfo, {\n    displayChoice: displayChoice,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"buttonContainer\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    name: \"dateButton\",\n    onClick: () => setDisplayChoice(\"today\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 11\n    }\n  }, \"Today\"), /*#__PURE__*/React.createElement(\"button\", {\n    name: \"dateButton\",\n    onClick: () => setDisplayChoice(\"weekend\"),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }\n  }, \"Weekend\"))));\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/maiduong/Downloads/app/src/App.js"],"names":["React","format","isSameDay","fromUnixTime","isWeekend","isThisWeek","differenceInCalendarDays","WeatherInfo","displayChoice","weatherData","setWeatherData","useState","useEffect","fetch","then","response","json","data","parseDay","current","parseWeekend","console","log","JSON","stringify","map","day","advice","date","dt","temperature","arrAvg","Object","values","temp","description","weather","iconId","icon","arr","reduce","a","b","length","isNextWeekend","diff","Date","raw","parsed","daily","flatMap","filter","weekStartsOn","WeatherDisplay","iconURL","Math","round","App","setDisplayChoice"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport \"./App.css\";\nimport {\n  format,\n  isSameDay,\n  fromUnixTime,\n  isWeekend,\n  isThisWeek,\n  differenceInCalendarDays,\n} from \"date-fns\";\n\nfunction WeatherInfo({ displayChoice }) {\n  const [weatherData, setWeatherData] = React.useState(null);\n  React.useEffect(() => {\n    fetch(\n      \"https://api.openweathermap.org/data/2.5/onecall?lat=52.5200&lon=13.4050&exclude=hourly,minutely&&units=metric&appid=43bbfae6b2cee11fcefb3bc03472ef9a\"\n    )\n      .then((response) => response.json())\n      .then((data) => setWeatherData(data));\n  }, []);\n\n  if (!weatherData) {\n    //  TODO: add a loading spinner??\n    return \"...\";\n  }\n  const data =\n    displayChoice === \"today\"\n      ? parseDay(weatherData.current)\n      : parseWeekend(weatherData);\n  console.log(JSON.stringify(data, null, 2));\n  return (\n    <div className=\"Card\">\n      {data.map((day) => (\n        <WeatherDisplay {...day} />\n      ))}\n    </div>\n  );\n}\n\nconst advice = {\n  \"01d\": \"Clear sky, clear mind.\",\n  \"01n\": \"Enjoy the stars tonight.\",\n  \"10d\": \"Better take an umbrella with you!\",\n  \"09d\": \"Heavy showers ahead!\",\n  \"02d\": \"A gray day provides the best light.\",\n  \"03d\": \"A nice day to spend outside\",\n  \"04d\": \"Don't look so gloomy, it's just the weather\",\n  \"11d\": \"Better stay inside!\",\n  \"09d\": \"Just a few drops\",\n  \"13d\": \"Make sure to put on some gloves today\",\n  \"50d\": \"Be careful when you drive!\",\n};\n\nconst parseDay = (day) => {\n  return [\n    {\n      date: fromUnixTime(day.dt),\n      temperature: arrAvg(Object.values(day.temp)) || day.temp,\n      description: day.weather[0].description,\n      iconId: day.weather[0].icon,\n    },\n  ];\n};\n\nconst arrAvg = (arr) => arr.reduce((a, b) => a + b, 0) / arr.length;\nconst isNextWeekend = (date) => {\n  const diff = differenceInCalendarDays(date, new Date());\n  return diff >= 7 && diff <= 9 && isWeekend(date);\n};\n\nconst parseWeekend = (raw) => {\n  const parsed = raw.daily.flatMap((day) => parseDay(day));\n  if (isWeekend(new Date())) {\n    return parsed.filter((day) => isNextWeekend(day));\n  }\n  return parsed.filter(\n    (day) => isWeekend(day.date) && isThisWeek(day.date, { weekStartsOn: 1 })\n  );\n};\n\nfunction WeatherDisplay({ date, description, temperature, iconId }) {\n  const day = isSameDay(new Date(), date) ? \"Today\" : format(date, \"EEEE\");\n  const iconURL = `http://openweathermap.org/img/wn/${iconId}@4x.png`;\n  return (\n    <div className=\"WeatherDisplay\" key={day}>\n      <div className=\"Date\">\n        <h3>{day}</h3>\n        <p>{format(date, \"PP\")}</p>\n      </div>\n      <img src={iconURL} alt=\"icon\" />\n      <p>{description}</p>\n      <p id=\"temperature\">{Math.round(temperature)} ºC</p>\n      <p>{advice[iconId] ? advice[iconId] : \"Just another day\"}</p>\n    </div>\n  );\n}\n\nfunction App() {\n  const [displayChoice, setDisplayChoice] = React.useState(\"today\");\n\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <WeatherInfo displayChoice={displayChoice} />\n        <div className=\"buttonContainer\">\n          <button name=\"dateButton\" onClick={() => setDisplayChoice(\"today\")}>\n            Today\n          </button>\n          <button name=\"dateButton\" onClick={() => setDisplayChoice(\"weekend\")}>\n            Weekend\n          </button>\n        </div>\n      </header>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}